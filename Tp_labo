#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep 20 14:08:46 2024

@author: Estudiante
"""
#%% Import y datos crudos
import pandas as pd
from inline_sql import sql,sql_val
carpeta="C:\\Users\\emili\\OneDrive\\Desktop\\Tp_labo\\"

datos_basicos=pd.read_csv(carpeta+"lista-sedes.csv")
datos_completos=pd.read_csv(carpeta+"Datos_sedes_completos.csv")
#arreglamos la linea 16 manualmente
datos_secciones=pd.read_csv(carpeta+"Datos_sedes_secciones.csv")

#%% Filtrado

datos_basicos=sql^ """SELECT DISTINCT sede_id, sede_desc_castellano ,pais_castellano, sede_tipo FROM datos_basicos """

datos_completos=sql^ """SELECT DISTINCT sede_id, region_geografica , redes_sociales FROM datos_completos"""

datos_secciones=sql^ """SELECT DISTINCT sede_id, sede_desc_castellano AS sede_sec, tipo_seccion FROM datos_secciones"""

#seteamos las claves
datos_basicos.set_index(keys='sede_id',inplace=True)
datos_completos.set_index(keys='sede_id',inplace=True)
datos_secciones.set_index(['sede_id','sede_sec'],inplace=True)

#%% Tratamiento de nulls
#rellenamos los valores None por el separador
datos_completos=datos_completos.fillna(value="//")
#%% Separando la lista anidada

indexes=[] #futuras columnas del df
redes=[]  #futuras columnas del df
for index,row in datos_completos.iterrows():
   lista=datos_completos.loc[index]['redes_sociales']
   longitud=len(lista) #longitud del la lista anidada a la relacion datos completos
   posicion_actual=0 #posicion de los caracteres
   red="" #url de la red actual
   en_red=True #esta leyendo un caracter perteneciente a una Url valida
   
   while  posicion_actual<longitud:
       if not (en_red and (longitud-posicion_actual>2)): #tratamiento del separador
           if (lista[posicion_actual]=="/" and lista[posicion_actual+1]=="/"):
               en_red=True    
               posicion_actual+=4 
       #primero se pregunta si no es null, luego si esta en una url valida y luego si es una posicion valida del string    
       if ((lista[0]!="/") and en_red and posicion_actual<longitud):
           
           if (lista[posicion_actual] == " "): #el espacio es el fin de una url
               indexes.append(index) #se guarda una copia del index al que pertenece la red 
               redes.append(red) #la url de la red
               red="" #inicializa una nueva red
               en_red=False #avisa que ya no esta mirando un caracter valido de url
           else:
               red+=lista[posicion_actual] #copiado de la url
       posicion_actual+=1
#armado del dataframe       
dict_sede_red_social={'index': indexes ,'redes' : redes} 

df_sedes_redes=pd.DataFrame(dict_sede_red_social)    

















